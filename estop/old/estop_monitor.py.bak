import lgpio
import os
import time
import logging
from datetime import datetime

# Configuration
ESTOP_PIN = 27  # GPIO pin number for the e-stop button
ESTOP_FILE = "/tmp/ESTOP"
LOG_FILE = "/tmp/e-stop.log"

# Setup logging
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format="%(asctime)s %(levelname)s %(message)s",
)

def log_button_press():
    """Logs the button press event with a timestamp."""
    timestamp = datetime.now().astimezone().isoformat()
    logging.info(f"Button pressed at {timestamp}")
    print(f"Button pressed at {timestamp}")

def write_estop_file():
    """Creates the ESTOP file if it doesn't already exist."""
    if not os.path.exists(ESTOP_FILE):
        with open(ESTOP_FILE, "w") as f:
            f.write("E-STOP Triggered\n")
        print(f"{ESTOP_FILE} created.")
    else:
        print(f"{ESTOP_FILE} already exists.")

def main():
    """Main function to monitor the e-stop button."""
    h = None  # Handle for GPIO chip
    try:
        # Initialize lgpio and set up the pin
        h = lgpio.gpiochip_open(0)  # Open the default GPIO chip
        lgpio.gpio_claim_input(h, ESTOP_PIN)

        # Set debounce time (200 ms) for alerts
        debounce_micros = 200000  # 200 ms
        lgpio.gpio_set_debounce_micros(h, ESTOP_PIN, debounce_micros)

        print("Monitoring e-stop button...")
        logging.info("E-stop monitoring started.")

        # Keep track of the last state
        last_state = lgpio.gpio_read(h, ESTOP_PIN)

        # Monitor GPIO changes
        while True:
            current_state = lgpio.gpio_read(h, ESTOP_PIN)
            if last_state != current_state:  # State has changed
                if current_state == 0:  # Button pressed (LOW state)
                    log_button_press()
                    write_estop_file()
            last_state = current_state
            time.sleep(0.1)  # Polling interval
    except KeyboardInterrupt:
        print("Exiting program.")
    except Exception as e:
        logging.error(f"Error occurred: {e}")
        print(f"Error occurred: {e}")
    finally:
        if h is not None:
            lgpio.gpiochip_close(h)
        logging.info("E-stop monitoring stopped.")

if __name__ == "__main__":
    main()
